local1 <- paste0(mymap$name, " 초등학교 수 : ",mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교)
local2 <- paste0(mymap$name, " 중학교 수 : ",mymap@data$사립초등학교+mymap@data$사립중학교+mymap@data$사립고등학교)
local3 <- paste0(mymap$name, " 고등학교 수 : ",mymap@data$국립초등학교+mymap@data$국립중학교+mymap@data$국립고등학교)
#전국별 학교개수
global1 <-sum(mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교)
global2 <-sum(mymap@data$사립초등학교+mymap@data$사립중학교+mymap@data$사립고등학교)
global3 <-sum(mymap@data$국립초등학교+mymap@data$국립중학교+mymap@data$국립고등학교)
ggplot(BOD, aes(x = Time, y = demand)) + geom_bar(stat = "identity")
school_name = c("초등학교","중학교","고등학교")
school_all_value = c(global1,global2,global3)
scholl_result = data.frame(school_name,school_all_value)
scholl_result
scholl_result = data.frame(school_name,school_all_value, stringsAsFactors = FALSE)
scholl_result
ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity")
View(scholl_result)
#전국별 학교개수
global1 <-sum(mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교)
global2 <-sum(mymap@data$공립중학교+mymap@data$사립중학교+mymap@data$국립중학교)
global3 <-sum(mymap@data$공립고등학교+mymap@data$사립고등학교+mymap@data$국립고등학교)
school_name = c("초등학교","중학교","고등학교")
school_all_value = c(global1,global2,global3)
scholl_result = data.frame(school_name,school_all_value)
scholl_result
scholl_result = data.frame(school_name,school_all_value, stringsAsFactors = FALSE)
scholl_result
ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity")
p = ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity")
p + geom_text(aes(label = school_all_value),size = 3,hjust=1.25, color='#FFFFFF')
p
p + geom_text(aes(label = school_all_value),size = 3,hjust=1.25, color='#FFFFFF')
p + geom_text(aes(label = school_all_value),size = 20,hjust=1.25, color='#FFFFFF')
p + geom_text(aes(label = school_all_value),size = 10,hjust=1.25, color='#FFFFFF')
p + geom_text(aes(label = school_all_value),size = 10,hjust=0, color='#FFFFFF')
p + geom_text(aes(label = school_all_value),size = 10,hjust=0.5, color='#FFFFFF')
p = ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity", fill = "red")
p + geom_text(aes(label = school_all_value),size = 10,hjust=0.5, color='#FFFFFF')
# rmd는 라이브러리 표시하는 게 최대 2개 밖에 안 되는건가...
# p = ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity", fill = "red")
#
# p + geom_text(aes(label = school_all_value),size = 10,hjust=0.5, color='#FFFFFF')
# rmd는 라이브러리 표시하는 게 최대 2개 밖에 안 되는건가...
p = ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity", fill = "red")
p + geom_text(aes(label = school_all_value),size = 10,hjust=0.5, color='#FFFFFF')
# Chunk 1
#필요한 패키지 다운로드
#leaflet는 자바스크립트로 만든 지도
#devtools는 github에 올라온 라이브러리를 다운로드 해주는 역할을 해줌
#kormaps는 대한민국 행정지도 데이터
#data.table는 데이터를 table 형식으로 표현해주는 라이브러리
#install.packages("data.table")
#install.packages("ggplot2")
#install.packages("leaflet")
#install.packages("devtools")  # 한번 설치한 경우에는 다시 설치할 필요 없습니다.
#devtools::install_github("cardiomoon/Kormaps")
#다운 받은 라이브러리를 셋팅
rm(list = ls())
library(webshot)
require(Kormaps)
require(tmap)
require(leaflet)
library(data.table)
library(ggplot2)
# Chunk 2
#현재 프로젝트가 있는 경로로 변경
setwd("C:\\Users\\kkag2\\Desktop\\R_Project")
#현재 프로젝트 경로 표시
getwd()
#학교 데이터를 table 형식으로 가공 후 표시
school <- fread("school_data.csv", sep = ",", header = T, stringsAsFactors = F)
school
#korpopmap 라이브러리 인코딩 처리
Encoding(names(korpopmap1))<-"UTF-8"
Encoding(korpopmap1@data$name)<-"UTF-8"
Encoding(korpopmap1@data$행정구역별_읍면동)<-"UTF-8"
value <- data.table(kormap1@data)
korpopmap1@data$name
#school table의 열 이름을 쓰고 싶으면 열을 풀어야 됨
a <- unlist(school[,2], use.names = FALSE)
#school 데이터를 보면 16개의 obs, 10개의 variables로 되어 있음
korpopmap1@data<-cbind(korpopmap1@data, school[1:16])
mymap <- korpopmap1
#palette는 색상 지정, popup은 지역 클릭시 팝업에 노출될 글씨 설정
#paste0은 공백 없이 붙히는 함수
mypalette1 <- colorNumeric(palette = "Reds", domain = mymap@data$공립초등학교)
mypopup1 <- paste0(mymap$name, " 공립 초등학교 수 : ",mymap@data$공립초등학교)
mypalette2 <- colorNumeric(palette = "Greens", domain = mymap@data$공립중학교)
mypopup2 <- paste0(mymap$name, " 공립 중학교 수 : ",mymap@data$공립중학교)
mypalette3 <- colorNumeric(palette = "Blues", domain = mymap@data$공립고등학교)
mypopup3 <- paste0(mymap$name, " 공립 고등학교 수 : ",mymap@data$공립고등학교)
mypalette4 <- colorNumeric(palette = "Reds", domain = mymap@data$사립초등학교)
mypopup4 <- paste0(mymap$name, " 사립 초등학교 수 : ",mymap@data$사립초등학교)
mypalette5 <- colorNumeric(palette = "Greens", domain = mymap@data$사립중학교)
mypopup5 <- paste0(mymap$name, " 사립 중학교 수 : ",mymap@data$사립중학교)
mypalette6 <- colorNumeric(palette = "Blues", domain = mymap@data$사립고등학교)
mypopup6 <- paste0(mymap$name, " 사립 고등학교 수 : ",mymap@data$사립고등학교)
mypalette7 <- colorNumeric(palette = "Reds", domain = mymap@data$국립초등학교)
mypopup7 <- paste0(mymap$name, " 국립 초등학교 수 : ",mymap@data$국립초등학교)
mypalette8 <- colorNumeric(palette = "Greens", domain = mymap@data$국립중학교)
mypopup8 <- paste0(mymap$name, " 국립 중학교 수 : ",mymap@data$국립중학교)
mypalette9 <- colorNumeric(palette = "Blues", domain = mymap@data$국립고등학교)
mypopup9 <- paste0(mymap$name, " 국립 고등학교 수 : ",mymap@data$국립고등학교)
#지역별 학교개수
local1 <- paste0(mymap$name, " 초등학교 수 : ",mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교)
local2 <- paste0(mymap$name, " 중학교 수 : ",mymap@data$사립초등학교+mymap@data$사립중학교+mymap@data$사립고등학교)
local3 <- paste0(mymap$name, " 고등학교 수 : ",mymap@data$국립초등학교+mymap@data$국립중학교+mymap@data$국립고등학교)
#전국별 학교개수
global1 <-sum(mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교)
global2 <-sum(mymap@data$공립중학교+mymap@data$사립중학교+mymap@data$국립중학교)
global3 <-sum(mymap@data$공립고등학교+mymap@data$사립고등학교+mymap@data$국립고등학교)
#전국별 학교 개수를 frame으로 만듬
school_name = c("초등학교","중학교","고등학교")
school_all_value = c(global1,global2,global3)
#Factors 형식을 FALSE를 해야 데이터를 쓸 수 있음 ggplot에선 Factors 지원 안함..
scholl_result = data.frame(school_name,school_all_value, stringsAsFactors = FALSE)
scholl_result
# Chunk 3
# rmd는 라이브러리 표시하는 게 최대 2개 밖에 안 되는건가...
p = ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity", fill = "red")
p + geom_text(aes(label = school_all_value),size = 10,hjust=0.5, color='#FFFFFF')
# Chunk 4
#공립초등학교 데이터만 시각화
leaflet(mymap) %>%
addTiles() %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .8,
popup = mypopup1,
color = ~mypalette1(mymap@data$공립초등학교))
# Chunk 5
#모든 학교 데이터 시각화
multilayer_map<-leaflet(mymap) %>%
addTiles() %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup1,
color = ~mypalette1(mymap@data$공립초등학교),
group="공립초등학교") %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup2,
color = ~mypalette2(mymap@data$공립중학교),
group="공립중학교") %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup3,
color = ~mypalette3(mymap@data$공립고등학교),
group="공립고등학교") %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup4,
color = ~mypalette4(mymap@data$사립초등학교),
group="사립초등학교") %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup5,
color = ~mypalette5(mymap@data$사립중학교),
group="사립중학교") %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup6,
color = ~mypalette6(mymap@data$사립고등학교),
group="사립고등학교") %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup7,
color = ~mypalette7(mymap@data$국립초등학교),
group="국립초등학교") %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup8,
color = ~mypalette8(mymap@data$국립중학교),
group="국립중학교") %>%
addPolygons(stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = .7,
popup = mypopup9,
color = ~mypalette9(mymap@data$국립고등학교),
group="국립고등학교") %>%
addLayersControl(
baseGroups = c("공립초등학교","공립중학교","공립고등학교","사립초등학교","사립중학교","사립고등학교","국립초등학교","국립중학교","국립고등학교"),
position = "bottomleft",
options = layersControlOptions(collapsed = FALSE)
)
#멀티지도 보여주기
multilayer_map
View(school)
View(scholl_result)
school_result1 = scholl_result = data.frame(mymap$name,local1,local2,local3, stringsAsFactors = FALSE)
school_result1
local1 <- paste0(mymap$name,mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교)
local2 <- paste0(mymap$name,mymap@data$사립초등학교+mymap@data$사립중학교+mymap@data$사립고등학교)
local3 <- paste0(mymap$name,mymap@data$국립초등학교+mymap@data$국립중학교+mymap@data$국립고등학교)
#전국별 학교개수
global1 <-sum(mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교)
global2 <-sum(mymap@data$공립중학교+mymap@data$사립중학교+mymap@data$국립중학교)
global3 <-sum(mymap@data$공립고등학교+mymap@data$사립고등학교+mymap@data$국립고등학교)
#전국별 학교 개수를 frame으로 만듬
school_name = c("초등학교","중학교","고등학교")
school_all_value = c(global1,global2,global3)
#Factors 형식을 FALSE를 해야 데이터를 쓸 수 있음 ggplot에선 Factors 지원 안함..
scholl_result = data.frame(school_name,school_all_value, stringsAsFactors = FALSE)
scholl_result
school_result1 = scholl_result = data.frame(mymap$name,local1,local2,local3, stringsAsFactors = FALSE)
school_result1
local1 <- mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교
local2 <- mymap@data$사립초등학교+mymap@data$사립중학교+mymap@data$사립고등학교
local3 <- mymap@data$국립초등학교+mymap@data$국립중학교+mymap@data$국립고등학교
#전국별 학교개수
global1 <-sum(mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교)
global2 <-sum(mymap@data$공립중학교+mymap@data$사립중학교+mymap@data$국립중학교)
global3 <-sum(mymap@data$공립고등학교+mymap@data$사립고등학교+mymap@data$국립고등학교)
#전국별 학교 개수를 frame으로 만듬
school_name = c("초등학교","중학교","고등학교")
school_all_value = c(global1,global2,global3)
#Factors 형식을 FALSE를 해야 데이터를 쓸 수 있음 ggplot에선 Factors 지원 안함..
scholl_result = data.frame(school_name,school_all_value, stringsAsFactors = FALSE)
scholl_result
school_result1 = scholl_result = data.frame(mymap$name,local1,local2,local3, stringsAsFactors = FALSE)
school_result1
#Factors 형식을 FALSE를 해야 데이터를 쓸 수 있음 ggplot에선 Factors 지원 안함..
scholl_result = data.frame(school_name,school_all_value, stringsAsFactors = FALSE)
scholl_result
school_result1 = scholl_result = data.frame(mymap$name,school_all_value, stringsAsFactors = FALSE)
school_result1
school_result1 = scholl_result = data.frame(mymap$name,school_all_value, stringsAsFactors = FALSE)
school_result1 = scholl_result = data.frame(mymap$name,local1,local2,local3, stringsAsFactors = FALSE)
school_result1
p = ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity", fill = "red")
p + geom_text(aes(label = school_all_value),size = 10,hjust=0.5, color='#FFFFFF')
#전국별 학교 개수를 frame으로 만듬
school_name = c("초등학교","중학교","고등학교")
school_all_value = c(global1,global2,global3)
#Factors 형식을 FALSE를 해야 데이터를 쓸 수 있음 ggplot에선 Factors 지원 안함..
scholl_result = data.frame(school_name,school_all_value, stringsAsFactors = FALSE)
scholl_result
school_result1 = scholl_result = data.frame(mymap$name,local1,local2,local3, stringsAsFactors = FALSE)
school_result1
p = ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity", fill = "red")
p + geom_text(aes(label = school_all_value),size = 10,hjust=0.5, color='#FFFFFF')
#전국별 학교 개수를 frame으로 만듬
school_name = c("초등학교","중학교","고등학교")
school_all_value = c(global1,global2,global3)
#Factors 형식을 FALSE를 해야 데이터를 쓸 수 있음 ggplot에선 Factors 지원 안함..
scholl_result = data.frame(school_name,school_all_value, stringsAsFactors = FALSE)
scholl_result
school_result1 = data.frame(mymap$name,local1,local2,local3, stringsAsFactors = FALSE)
school_result1
p = ggplot(scholl_result, aes(x = school_name, y = school_all_value)) + geom_bar(stat = "identity", fill = "red")
p + geom_text(aes(label = school_all_value),size = 10,hjust=0.5, color='#FFFFFF')
runApp('Test')
library(shiny)
library(datasets)
#현재 프로젝트가 있는 경로로 변경
setwd("C:\\Users\\kkag2\\Desktop\\R_Project")
#현재 프로젝트 경로 표시
getwd()
#학교 데이터를 table 형식으로 가공 후 표시
school <- fread("school_data.csv", sep = ",", header = T, stringsAsFactors = F)
school
#korpopmap 라이브러리 인코딩 처리
Encoding(names(korpopmap1))<-"UTF-8"
Encoding(korpopmap1@data$name)<-"UTF-8"
Encoding(korpopmap1@data$행정구역별_읍면동)<-"UTF-8"
value <- data.table(kormap1@data)
korpopmap1@data$name
#school table의 열 이름을 쓰고 싶으면 열을 풀어야 됨
a <- unlist(school[,2], use.names = FALSE)
#school 데이터를 보면 16개의 obs, 10개의 variables로 되어 있음
korpopmap1@data<-cbind(korpopmap1@data, school[1:16])
mymap <- korpopmap1
school_result1 = data.frame(mymap$name,local1,local2,local3, stringsAsFactors = FALSE)
school_result1
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("전국 초 중 고등학교 현황황"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("region", "데이터 선택:",
choices=colnames(mymap.name)),
hr(),
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("전국 초 중 고등학교 현황황"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("region", "데이터 선택:",
choices=colnames(korpopmap1@data$name)),
hr(),
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("전국 초 중 고등학교 현황황"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("region", "데이터 선택:",
choices=colnames("충청남도")),
hr(),
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("전국 초 중 고등학교 현황황"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("region", "데이터 선택:",
choices=colnames(list("충청남도","충청북도"))),
hr(),
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
WorldPhones
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("전국 초 중 고등학교 현황황"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("region", "데이터 선택:",
choices=colnames(school_result1)),
hr(),
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
school_result1
WorldPhones
runApp('Test')
runApp('Test')
WorldPhones
school_result1
school_result1 = data.frame(local1,local2,local3, stringsAsFactors = FALSE)
school_result1
school_result1 = data.frame(local1,local2,local3, stringsAsFactors = FALSE)
school_result1
colnames(school_result1) = korpopmap1@data$name
library(shiny)
library(datasets)
#현재 프로젝트가 있는 경로로 변경
setwd("C:\\Users\\kkag2\\Desktop\\R_Project")
#현재 프로젝트 경로 표시
getwd()
#학교 데이터를 table 형식으로 가공 후 표시
school <- fread("school_data.csv", sep = ",", header = T, stringsAsFactors = F)
school
#korpopmap 라이브러리 인코딩 처리
Encoding(names(korpopmap1))<-"UTF-8"
Encoding(korpopmap1@data$name)<-"UTF-8"
Encoding(korpopmap1@data$행정구역별_읍면동)<-"UTF-8"
value <- data.table(kormap1@data)
korpopmap1@data$name
#school table의 열 이름을 쓰고 싶으면 열을 풀어야 됨
a <- unlist(school[,2], use.names = FALSE)
#school 데이터를 보면 16개의 obs, 10개의 variables로 되어 있음
korpopmap1@data<-cbind(korpopmap1@data, school[1:16])
mymap <- korpopmap1
school_result1 = data.frame(local1,local2,local3, stringsAsFactors = FALSE)
school_result1
colnames(school_result1) = mymap$name
#school 데이터를 보면 16개의 obs, 10개의 variables로 되어 있음
korpopmap1@data<-cbind(korpopmap1@data, school[1:16])
mymap <- korpopmap1
school_result1 = data.frame(local1,local2,local3, stringsAsFactors = FALSE)
school_result1
colnames(school_result1) = list("초등학교","중학교","고등학교")
rownames(school_result1) = mymap$name
school_result1
WorldPhones
runApp('Test')
WorldPhones
runApp('Test')
WorldPhones
school_result1
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
WorldPhones
school_result1
colnames(school_result1)
plotOutput("phonePlot")
runApp('Test')
runApp('Test')
runApp('Test')
runApp('Test')
school_result1
WorldPhones
#현재 프로젝트 경로 표시
getwd()
#학교 데이터를 table 형식으로 가공 후 표시
school <- fread("school_data.csv", sep = ",", header = T, stringsAsFactors = F)
school
#korpopmap 라이브러리 인코딩 처리
Encoding(names(korpopmap1))<-"UTF-8"
Encoding(korpopmap1@data$name)<-"UTF-8"
Encoding(korpopmap1@data$행정구역별_읍면동)<-"UTF-8"
value <- data.table(kormap1@data)
korpopmap1@data$name
#school table의 열 이름을 쓰고 싶으면 열을 풀어야 됨
a <- unlist(school[,2], use.names = FALSE)
#school 데이터를 보면 16개의 obs, 10개의 variables로 되어 있음
korpopmap1@data<-cbind(korpopmap1@data, school[1:16])
mymap <- korpopmap1
school_result1 = data.frame(local1,local2,local3, stringsAsFactors = FALSE)
school_result1
colnames(school_result1) = mymap$name
rownames(school_result1) =list("초등학교","중학교","고등학교")
#현재 프로젝트 경로 표시
getwd()
#학교 데이터를 table 형식으로 가공 후 표시
school <- fread("school_data.csv", sep = ",", header = T, stringsAsFactors = F)
school
Encoding(korpopmap1@data$name)<-"UTF-8"
#korpopmap 라이브러리 인코딩 처리
Encoding(names(korpopmap1))<-"UTF-8"
Encoding(korpopmap1@data$행정구역별_읍면동)<-"UTF-8"
value <- data.table(kormap1@data)
korpopmap1@data$name
runApp('Test')
input$region
runApp('Test')
runApp('Test')
runApp('Test')
local1 <- mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교
local2 <- mymap@data$사립초등학교+mymap@data$사립중학교+mymap@data$사립고등학교
local3 <- mymap@data$국립초등학교+mymap@data$국립중학교+mymap@data$국립고등학교
school_result1 = data.frame(local1,local2,local3, stringsAsFactors = FALSE)
local1 <- mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교
local2 <- mymap@data$사립초등학교+mymap@data$사립중학교+mymap@data$사립고등학교
local3 <- mymap@data$국립초등학교+mymap@data$국립중학교+mymap@data$국립고등학교
school_result1 = data.frame(local1,local2,local3, stringsAsFactors = FALSE)
school_result1
colnames(school_result1) = list("초등학교","중학교","고등학교")
rownames(school_result1) = mymap$name
school_result1
library(shiny)
library(datasets)
#현재 프로젝트 경로 표시
getwd()
#학교 데이터를 table 형식으로 가공 후 표시
school <- fread("school_data.csv", sep = ",", header = T, stringsAsFactors = F)
school
#korpopmap 라이브러리 인코딩 처리
Encoding(names(korpopmap1))<-"UTF-8"
Encoding(korpopmap1@data$name)<-"UTF-8"
Encoding(korpopmap1@data$행정구역별_읍면동)<-"UTF-8"
value <- data.table(kormap1@data)
korpopmap1@data$name
#school table의 열 이름을 쓰고 싶으면 열을 풀어야 됨
a <- unlist(school[,2], use.names = FALSE)
#school 데이터를 보면 16개의 obs, 10개의 variables로 되어 있음
korpopmap1@data<-cbind(korpopmap1@data, school[1:16])
mymap <- korpopmap1
local1 <- mymap@data$공립초등학교+mymap@data$사립초등학교+mymap@data$국립초등학교
local2 <- mymap@data$공립중학교+mymap@data$사립중학교+mymap@data$국립중학교
local3 <- mymap@data$공립고등학교+mymap@data$사립고등학교+mymap@data$국립고등학교
school_result1 = data.frame(local1,local2,local3, stringsAsFactors = FALSE)
school_result1
colnames(school_result1) = list("초등학교","중학교","고등학교")
rownames(school_result1) = mymap$name
school_result1
runApp('Test')
runApp('Test')
runApp('Shiny_Result')
runApp('Shiny_Result')
